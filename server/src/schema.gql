# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type ProposalHollow {
  proposerId: ID!
  tenderId: ID!
  amount: Int!
  deliveredByVendor: Boolean!
}

type Proposal {
  proposerId: ID!
  tenderId: ID!
  amount: Int!
  deliveredByVendor: Boolean!
}

type MaterialHollow {
  name: ID!
}

type Material {
  name: ID!
  usedForProducts: [Product!]!
  heldAuctions: [Tender!]!
}

type ProductHollow {
  creatorId: ID!
  materialName: ID!
}

type Product {
  creatorId: ID!
  materialName: ID!
  creator: Vendor!
  createdMaterial: Material!
}

type Vendor {
  userId: ID!
  companyName: String
  asUser: User!
  productsCreated: [Product!]!
  submittedProposals: [Proposal!]!
  acceptedAgreements: [Agreement!]!
}

type UserHollow {
  id: ID!
  firstName: String!
  lastName: String!
  email: String!
  role: String!
  accessToken: String!
}

type User {
  id: ID!
  firstName: String!
  lastName: String!
  email: String!
  role: String!
  accessToken: String!
}

type Manufacturer {
  userId: ID!
  companyName: String!
  asUser: User!
  auctionsManaged: [Tender!]!
}

type TenderHollow {
  tenderId: ID!
  managerId: String!
  materialName: String!
  description: String!
  startDate: DateTime!
  duration: Int!
  endDate: DateTime!
  agreementStartDate: DateTime!
  agreementDuration: Int!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Tender {
  tenderId: ID!
  managerId: String!
  materialName: String!
  description: String!
  startDate: DateTime!
  duration: Int!
  endDate: DateTime!
  agreementStartDate: DateTime!
  agreementDuration: Int!
  manager: Manufacturer!
  forMaterial: Material!
  proposals: [Proposal!]!
}

type AgreementHollow {
  tenderId: ID!
  vendorId: ID!
  startDate: DateTime!
  duration: Int!
  endDate: DateTime!
}

type Agreement {
  tenderId: ID!
  vendorId: ID!
  startDate: DateTime!
  duration: Int!
  endDate: DateTime!
}

type Query {
  getAllProducts: [Product!]!
  getAllUsers: [User!]!
  currentUser: User
}

type Mutation {
  createProduct(product: ProductInput!): ProductHollow!
  login(login: UserLoginInput!): UserHollow!
  registerManufacturer(user: UserInput!, manufacturer: ManufacturerInput!): UserHollow!
  registerVendor(user: UserInput!, vendor: VendorInput!): UserHollow!
  createAgreement(agreement: AgreementInput!): AgreementHollow!
  createTender(tender: TenderInput!): TenderHollow!
  createProposal(proposal: ProposalInput!): ProposalHollow!
  createMaterial(material: MaterialInput!): MaterialHollow!
}

input ProductInput {
  materialName: String!
}

input UserLoginInput {
  email: String!
  password: String!
}

input UserInput {
  email: String!
  password: String!
  firstName: String!
  lastName: String!
}

input ManufacturerInput {
  companyName: String!
}

input VendorInput {
  companyName: String!
}

input AgreementInput {
  tenderId: String!
  vendorId: String!
  startDate: DateTime!
  duration: Float!
}

input TenderInput {
  startDate: DateTime!
  duration: Float!
  agreementStartDate: DateTime!
  agreementDuration: Float!
  materialName: String!
}

input ProposalInput {
  tenderId: String!
  amount: Float!
  deliveredByVendor: Boolean!
}

input MaterialInput {
  name: String!
}
